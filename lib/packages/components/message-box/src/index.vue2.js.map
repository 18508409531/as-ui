{"version":3,"file":"index.vue2.js","sources":["../../../../../../../packages/components/message-box/src/index.vue"],"sourcesContent":["<template>\n  <transition :name=\"ns.b('fade')\" @after-leave=\"$emit('destory')\">\n    <as-overlay\n      v-show=\"visible\"\n      :mask=\"modal\"\n      :overlay-class=\"[ns.is('message-box')]\"\n    >\n      <div :class=\"[ns.b('overlay')]\">\n        <div :class=\"[ns.b()]\">\n          <div :class=\"[ns.e('header')]\">\n            <div :class=\"[ns.e('title')]\">\n              <span>{{ title }}</span>\n            </div>\n            <div :class=\"ns.e('headerbtn')\" @click=\"visible = false\">\n              <as-icon :class=\"['as-ui-chahao1']\" />\n            </div>\n          </div>\n          <div :class=\"[ns.e('content')]\">\n            <div :class=\"[ns.e('container')]\">\n              <as-icon :class=\"['as-ui-shenqingchenggong']\" />\n              <div :class=\"ns.e('message')\">\n                {{ message }}\n              </div>\n            </div>\n          </div>\n          <div :class=\"[ns.e('btns')]\">\n            <button\n              v-if=\"showConfirmButton\"\n              type=\"button\"\n              :class=\"[ns.e('confirm')]\"\n              @click=\"doClose('confirm')\"\n            >\n              <span>{{ confirmButtonText }}</span>\n            </button>\n            <button\n              v-if=\"showCancelButton\"\n              type=\"button\"\n              :class=\"[ns.e('cancel')]\"\n              @click=\"doClose('cancel')\"\n            >\n              <span>{{ cancelButtonText }}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </as-overlay>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport { messageBoxProps } from './build-props'\nimport { useNamespace } from '@as-ui/utils/bem'\nimport AsIcon from '../../icon/src/icon.vue'\nimport { AsOverlay } from '@as-ui/components/overlay'\n\ndefineProps(messageBoxProps)\nconst emits = defineEmits(['action', 'destory'])\nconst ns = useNamespace('message-box')\n\nconst visible = ref(false)\n\nconst doClose = (state: string) => {\n  visible.value = false\n  emits('action', state)\n}\n\ndefineExpose({\n  visible\n})\n</script>\n"],"names":["useNamespace","ref"],"mappings":";;;;;;;;;;;;;;;AA0DA,IAAM,MAAA,EAAA,GAAKA,iBAAa,aAAa,CAAA,CAAA;AAErC,IAAM,MAAA,OAAA,GAAUC,QAAI,KAAK,CAAA,CAAA;AAEzB,IAAM,MAAA,OAAA,GAAU,CAAC,KAAkB,KAAA;AACjC,MAAA,OAAA,CAAQ,KAAQ,GAAA,KAAA,CAAA;AAChB,MAAA,KAAA,CAAM,UAAU,KAAK,CAAA,CAAA;AAAA,KACvB,CAAA;AAEA,IAAa,MAAA,CAAA;AAAA,MACX,OAAA;AAAA,KACD,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}