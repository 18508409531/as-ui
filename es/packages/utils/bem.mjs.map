{"version":3,"file":"bem.mjs","sources":["../../../../../packages/utils/bem.ts"],"sourcesContent":["// Bem是块（block）、元素（element）、修饰符（modifier）state 状态\n// -中划线：仅作为连字符使用，表示某个块或者某个子元素的多单词之间的连接记号。\n// __双下划线：双下划线用来连接块和块的子元素\n// _单下划线：单下划线用来描述一个块或者块的子元素的一种状态\n\nexport const defaultNamespace = 'as'\nconst statePrefix = 'is-'\nfunction _bem(\n  block: string,\n  blockSuffix: string,\n  element: string,\n  modifier: string\n) {\n  let cls = `${block}`\n  if (blockSuffix) {\n    cls += `-${blockSuffix}`\n  }\n  if (element) {\n    cls += `__${element}`\n  }\n  if (modifier) {\n    cls += `--${modifier}`\n  }\n  return cls\n}\nfunction createBEM(block: string) {\n  const b = (blockSuffix = '') => _bem(block, blockSuffix, '', '')\n\n  const e = (element?: string) => (element ? _bem(block, '', element, '') : '')\n\n  const m = (modifier?: string) =>\n    modifier ? _bem(block, '', '', modifier) : ''\n\n  const be = (blockSuffix?: string, element?: string) =>\n    blockSuffix && element ? _bem(block, blockSuffix, element, '') : ''\n\n  const em = (element?: string, modifier?: string) =>\n    element && modifier ? _bem(block, '', element, modifier) : ''\n\n  const bm = (blockSuffix?: string, modifier?: string) =>\n    blockSuffix && modifier ? _bem(block, blockSuffix, '', modifier) : ''\n\n  const bem = (blockSuffix?: string, element?: string, modifier?: string) =>\n    blockSuffix && element && modifier\n      ? _bem(block, blockSuffix, element, modifier)\n      : ''\n  const is: {\n    (name: string, state: boolean | undefined): string\n    (name: string): string\n  } = (name: string, ...args: [boolean | undefined] | []) => {\n    const state = args.length >= 1 ? args[0]! : true\n    return name && state ? `${statePrefix}${name}` : ''\n  }\n  return {\n    b,\n    e,\n    m,\n    be,\n    em,\n    bm,\n    bem,\n    is\n  }\n}\n\nexport function useNamespace(name: string) {\n  const prefixName = defaultNamespace + '-' + name\n  return createBEM(prefixName)\n}\n"],"names":[],"mappings":"AAKO,MAAM,gBAAmB,GAAA,KAAA;AAChC,MAAM,WAAc,GAAA,KAAA,CAAA;AACpB,SAAS,IACP,CAAA,KAAA,EACA,WACA,EAAA,OAAA,EACA,QACA,EAAA;AACA,EAAA,IAAI,MAAM,CAAG,EAAA,KAAA,CAAA,CAAA,CAAA;AACb,EAAA,IAAI,WAAa,EAAA;AACf,IAAA,GAAA,IAAO,CAAI,CAAA,EAAA,WAAA,CAAA,CAAA,CAAA;AAAA,GACb;AACA,EAAA,IAAI,OAAS,EAAA;AACX,IAAA,GAAA,IAAO,CAAK,EAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AAAA,GACd;AACA,EAAA,IAAI,QAAU,EAAA;AACZ,IAAA,GAAA,IAAO,CAAK,EAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AAAA,GACd;AACA,EAAO,OAAA,GAAA,CAAA;AACT,CAAA;AACA,SAAS,UAAU,KAAe,EAAA;AAChC,EAAM,MAAA,CAAA,GAAI,CAAC,WAAc,GAAA,EAAA,KAAO,KAAK,KAAO,EAAA,WAAA,EAAa,IAAI,EAAE,CAAA,CAAA;AAE/D,EAAM,MAAA,CAAA,GAAI,CAAC,OAAsB,KAAA,OAAA,GAAU,KAAK,KAAO,EAAA,EAAA,EAAI,OAAS,EAAA,EAAE,CAAI,GAAA,EAAA,CAAA;AAE1E,EAAM,MAAA,CAAA,GAAI,CAAC,QACT,KAAA,QAAA,GAAW,KAAK,KAAO,EAAA,EAAA,EAAI,EAAI,EAAA,QAAQ,CAAI,GAAA,EAAA,CAAA;AAE7C,EAAM,MAAA,EAAA,GAAK,CAAC,WAAA,EAAsB,OAChC,KAAA,WAAA,IAAe,OAAU,GAAA,IAAA,CAAK,KAAO,EAAA,WAAA,EAAa,OAAS,EAAA,EAAE,CAAI,GAAA,EAAA,CAAA;AAEnE,EAAM,MAAA,EAAA,GAAK,CAAC,OAAA,EAAkB,QAC5B,KAAA,OAAA,IAAW,QAAW,GAAA,IAAA,CAAK,KAAO,EAAA,EAAA,EAAI,OAAS,EAAA,QAAQ,CAAI,GAAA,EAAA,CAAA;AAE7D,EAAM,MAAA,EAAA,GAAK,CAAC,WAAA,EAAsB,QAChC,KAAA,WAAA,IAAe,QAAW,GAAA,IAAA,CAAK,KAAO,EAAA,WAAA,EAAa,EAAI,EAAA,QAAQ,CAAI,GAAA,EAAA,CAAA;AAErE,EAAA,MAAM,GAAM,GAAA,CAAC,WAAsB,EAAA,OAAA,EAAkB,QACnD,KAAA,WAAA,IAAe,OAAW,IAAA,QAAA,GACtB,IAAK,CAAA,KAAA,EAAO,WAAa,EAAA,OAAA,EAAS,QAAQ,CAC1C,GAAA,EAAA,CAAA;AACN,EAAM,MAAA,EAAA,GAGF,CAAC,IAAA,EAAA,GAAiB,IAAqC,KAAA;AACzD,IAAA,MAAM,KAAQ,GAAA,IAAA,CAAK,MAAU,IAAA,CAAA,GAAI,KAAK,CAAM,CAAA,GAAA,IAAA,CAAA;AAC5C,IAAA,OAAO,IAAQ,IAAA,KAAA,GAAQ,CAAG,EAAA,WAAA,CAAA,EAAc,IAAS,CAAA,CAAA,GAAA,EAAA,CAAA;AAAA,GACnD,CAAA;AACA,EAAO,OAAA;AAAA,IACL,CAAA;AAAA,IACA,CAAA;AAAA,IACA,CAAA;AAAA,IACA,EAAA;AAAA,IACA,EAAA;AAAA,IACA,EAAA;AAAA,IACA,GAAA;AAAA,IACA,EAAA;AAAA,GACF,CAAA;AACF,CAAA;AAEO,SAAS,aAAa,IAAc,EAAA;AACzC,EAAM,MAAA,UAAA,GAAa,mBAAmB,GAAM,GAAA,IAAA,CAAA;AAC5C,EAAA,OAAO,UAAU,UAAU,CAAA,CAAA;AAC7B;;;;"}