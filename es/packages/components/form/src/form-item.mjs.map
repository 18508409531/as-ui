{"version":3,"file":"form-item.mjs","sources":["../../../../../../../packages/components/form/src/form-item.ts"],"sourcesContent":["import type { RuleItem } from 'async-validator'\nimport { ExtractPropTypes, InjectionKey, PropType } from 'vue'\n\nexport type Arrayable<T> = T | T[]\n\nexport interface FormItemRule extends RuleItem {\n  trigger?: Arrayable<string>\n}\n\nexport const formItemValidateState = ['success', 'error', ''] as const\nexport type FormItemValidateState = (typeof formItemValidateState)[number]\n\nexport const formItemProps = {\n  prop: String,\n  label: String,\n  rules: [Object, Array] as PropType<Arrayable<FormItemRule>>,\n  showMessage: {\n    type: Boolean,\n    default: true\n  }\n} as const\n\nexport type FormItemProps = Partial<ExtractPropTypes<typeof formItemProps>>\n\nexport const formItemContextKey: InjectionKey<FormItemContext> =\n  Symbol('formItemContextKey')\n\nexport interface FormItemContext extends FormItemProps {\n  validate: (\n    trigger: string,\n    callback?: (isValid: boolean) => void\n  ) => Promise<void>\n}\n"],"names":[],"mappings":"AASO,MAAM,qBAAwB,GAAA,CAAC,SAAW,EAAA,OAAA,EAAS,EAAE,EAAA;AAGrD,MAAM,aAAgB,GAAA;AAAA,EAC3B,IAAM,EAAA,MAAA;AAAA,EACN,KAAO,EAAA,MAAA;AAAA,EACP,KAAA,EAAO,CAAC,MAAA,EAAQ,KAAK,CAAA;AAAA,EACrB,WAAa,EAAA;AAAA,IACX,IAAM,EAAA,OAAA;AAAA,IACN,OAAS,EAAA,IAAA;AAAA,GACX;AACF,EAAA;AAIa,MAAA,kBAAA,GACX,OAAO,oBAAoB;;;;"}